{
  "name": "alfresco",
  "description": "Installs Alfresco Community and Enterprise Edition.",
  "long_description": "chef-alfresco\n---\n<img align=\"left\" src=\"chef-alfresco-logo.png\" alt=\"Chef Alfresco Logo\" title=\"Chef Alfresco Logo\"/>\n\n[![Build Status](https://travis-ci.org/Alfresco/chef-alfresco.svg)](https://travis-ci.org/Alfresco/chef-alfresco)\n\nchef-alfresco is a Chef cookbook that provides a modular, configurable and extensible way to install an Alfresco node/stack; `alfresco::default` parses `node['alfresco']['components']` and includes other `alfresco::*` recipes accordingly.\n\nIt is tested on Centos 7.x and Ubuntu 14.04 (soon on Centos 6.7)\n\nTo know more about attribute definition and overriding, check [CHEF-ATTRIBUTES.md](CHEF-ATTRIBUTES.md)\nTo get a list of packaged installed, their sources and versions, check [PACKAGES.md](PACKAGES.md)\n\nLocal test (run)\n---\n\n#### Prerequisites\n- [ChefDK](https://downloads.chef.io/chef-dk/)\n- [Vagrant](https://www.vagrantup.com/downloads.html)\n- [Virtualbox](https://www.virtualbox.org/wiki/downloads)\n- Make sure that `PATH=$HOME/.chefdk/gem/ruby/2.1.0/bin:/opt/chefdk/bin:/opt/chefdk/embedded/bin:$PATH`\n- Make sure that you have [SSH Keys configured in GitHub](https://help.github.com/articles/generating-ssh-keys/)\n\n#### Command\n```\nkitchen converge community\n```\nIt takes roughly 20 minutes for a full default configuration (with a fast laptop/connection)\n\n#### Access\nThe only fully functional HTTP endpoint is by default [http://localhost:8800](https://localhost:8800)\n\nYou can also access internal ports for debugging purposes (though you need to open them manually using Virtualbox, or uncommenting some entries in [Vagrantfile.erb](Vagrantfile.erb))\n- [http://localhost:9000](http://localhost:9000) (haproxy)\n- [http://localhost:8070/alfresco](http://localhost:8070/alfresco) (tomcat-alfresco)\n- [http://localhost:8081/share](http://localhost:8081/share) (tomcat-share)\n- [http://localhost:8090/solr](http://localhost:8090/solr) (tomcat-solr)\n\nIf you use analytics and/or media-management you can also access:\n- (WIP) [http://localhost:8080/pentaho](http://localhost:8080/pentaho) (ba-server tomcat)\n- [http://localhost:61616](http://localhost:61616) (activemq)\n\nAccess to the admin console is via (https://localhost:8843/alfresco/)[https://localhost:8843/alfresco/] and then Alfresco Administration Console.\n\n#### Tweaking\nPlease [review CPU/memory configurations](Vagrantfile.erb) of chef-alfresco and adapt them to your workstation specs; hereby the default values:\n```\nc.vm.provider \"virtualbox\" do |v|\n  v.memory = 4096\n  v.cpus = 2\nend\n```\n\n#### Guest Addition error\n\nIf you have issues installing the VM Guest Additions, run the following command\n\n```\nsudo ln -s /usr/include/ /lib/modules/3.10.0-123.el7.x86_64/build/\n```\n\n#### Waiting for `kitchen converge\n1. First time you run it will take roughly 40 minutes\n2. Second (or next) time you run a `kitchen converge` (without a previous `kitchen destroy`), it will take roughly 4 minutes\n\n#### Caching (WIP)\n\nIt's possible to setup a local cached proxy, so that artifacts will be only downloaded once, in case of multiple runs; [here's how I've set it up on OSX](https://gist.github.com/maoo/3262589c9db989c6e948)\n\nChef Usage\n---\n\nAdd `alfresco::default` in your `run_list`.\n\nYou can optionally shop through the [recipe list](https://github.com/maoo/chef-alfresco/blob/master/recipes) and customise your run, though it is advised (some ordering must be respected and may not be trivial) to use `alfresco::default` and define `node['alfresco']['components']` as explained below.\n\nThe following cookbooks are not part of Chef Supermarket; as such, you will need to explicitely define them as dependency of your Chef cookbook to make chef-alfresco working:\n\n```\ncookbook 'tomcat', git:'git@github.com:maoo/tomcat.git', tag: \"v0.17.3-fork2\"\ncookbook 'maven', git:'git@github.com:maoo/maven.git', tag: \"v1.2.0-fork\"\ncookbook 'file', git: 'git@github.com:jenssegers/chef-file.git', tag: \"v1.0.0\"\n```\n\nCheck [Berksfile](https://github.com/maoo/chef-alfresco/blob/master/Berksfile) for more info; you can also use Librarian to resolve transitive dependencies.\n\nPacker Usage\n---\n\nYou can use chef-alfresco in combination with [Packer Common](https://github.com/Alfresco/packer-common) or [Alfresco Boxes](https://github.com/maoo/alfresco-boxes) projects, to build AMIs, OVFs, Vagrant boxes, [Docker images](registry.hub.docker.com/u/maoo) and more.\n\nDefault Configurations\n---\n\nThe most important configurations of chef-alfresco can be found in [attributes/default.rb](https://github.com/maoo/chef-alfresco/blob/master/attributes/default.rb); hereby the most important ones, as they define the components to use and the deployment features to enable:\n\n```\n# Alfresco components that are not enabled by default:\n# analytics - Alfresco Reporting and Analytics feature; enterprise-only\n# aos - Alfresco Office Services (WARs); enterprise-only\n# media - Alfresco media-management; enterprise-only\n# rsyslog - Remote logging\n# logstash-forwarder - Remote logging\n#\n# Default Alfresco components\n#\ndefault['alfresco']['components'] = ['haproxy','nginx','tomcat','transform','repo','share','solr','mysql','rm','googledocs']\n\n# Generates alfresco-global.properties using node['alfresco']['properties'] key/value attributes\ndefault['alfresco']['generate.global.properties'] = true\n\n# Generates share-config-custom.xml using a pre-defined template (check templates/default)\n# to configure http endpoints and CSRF origin/referer\ndefault['alfresco']['generate.share.config.custom'] = true\n\n# Generates repo-log4j.properties using all node['alfresco']['repo-log4j']\n# key/value attributes\ndefault['alfresco']['generate.repo.log4j.properties'] = true\n\n# Alfresco version; you can use Enterprise versions, ie. '5.0.2' and edition (to \"enterprise\")\ndefault['alfresco']['version'] = \"5.1-b-EA\"\ndefault['alfresco']['edition'] = \"community\"\n# default['alfresco']['version'] = \"5.0.2\"\n# default['alfresco']['edition'] = \"enterprise\"\n```\n\nUsing Alfresco Enterprise\n---\nIn order to configure access to Alfresco private repository, you need to use your customer credentials (same login as https://artifacts.alfresco.com); just set the following variables and kitchen command:\n```\nexport NEXUS_USERNAME=myuser\nexport NEXUS_PASSWORD=mypwd\nkitchen converge enterprise\n```\n\nAlternatively, you can use databags, check [other.json.example](test/integration/data_bags/maven_repos/other.json.example)\n\nUsing custom Maven repository\n---\nYou can configure your own Maven repository:\n- Create `test/integration/data_bags/maven_repos/mymvnrepo.json`:\n```\n{\n  \"id\":\"mymvnrepo\",\n  \"url\": \"http://mymvnrepo.com/nexus/content/groups/public\",\n  \"username\":\"myuser\",\n  \"password\":\"mypwd\"\n}\n```\n\nComponents\n---\nFor each component, chef-alfresco may include external Chef cookbooks and/or change some attribute's defaults; the logic is implemented in the Chef-Alfresco [default recipe](https://github.com/maoo/chef-alfresco/blob/master/recipes/default.rb)\n\n#### tomcat\n\nInstalls and configures Apache Tomcat using a [fork of Tomcat community cookbook](https://github.com/maoo/tomcat):\n- Supports single multi-homed installations (default), allowing Alfresco Repository, Share and Solr to run on 3 (or 2) different Java virtual machines\n- Supports versions 6 and 7 (default), depending on Alfresco version\n- Standard Apache Tomcat installation using apt-get or yum repositories\n- Configurable SSL keystore/truststore in `server.xml`\n\nThe complete list of configurable attributes can be found in [tomcat attributes](https://github.com/maoo/chef-alfresco/blob/master/recipe/_tomcat-attributes.rb); java configuration is included in the [default attribute file](https://github.com/maoo/chef-alfresco/blob/master/attributes/default.rb)\n\n#### mysql\n\nInstalls and configures a local instance MySQL 5.6 Community Server, creates a database and a granted user; hereby the default configuration:\n\n```\n\"alfresco\" : {\n  \"db\" : {\n    \"repo_hosts\" : \"%\",\n    \"root_user\": \"root\",\n    \"server_root_password\" : \"ilikerandompasswords\"\n  },\n  \"properties\" : {\n    \"db.prefix\": \"mysql\",\n    \"db.dbname\" : \"alfresco\",\n    \"db.host\": \"localhost\",\n    \"db.port\" : \"3306\",\n    \"db.username\" : \"alfresco\",\n    \"db.password\" : \"alfresco\"\n  }\n}\n```\n\n#### repo\n\nInstalls Alfresco Repository within a given Servlet container; the following features are provided.\n\n##### WAR installation\n\nFetch Alfresco WAR from a public/private Maven repository, URL or file-system (using [artifact-deployer](https://github.com/maoo/artifact-deployer)); by default, Chef Alfresco will fetch [Alfresco Repository 5.0.d WAR](https://artifacts.alfresco.com/nexus/index.html#nexus-search;gav~org.alfresco~alfresco~5.0.d~war~), but you can override Maven coordinates to fetch your custom artifact (or define a url/path , check  [artifact-deployer docs](https://github.com/maoo/artifact-deployer)); since the WAR already includes log4j.properties and alfresco-global.properties, we need to disable the file generation features\n\n```\n\"artifacts\": {\n  \"alfresco\": {\n    \"groupId\": \"com.acme.alfresco\",\n    \"artifactId\": \"alfresco-enterprise-foundation\",\n    \"version\": \"1.0.2\"\n  }\n}\n```\n\n##### AMP installation\n\nResolve (and apply) Alfresco AMP files (as above, using artifact-deployer)\n```\n\"artifacts\": {\n  \"my-amp\": {\n      \"enabled\": true,\n      \"path\": \"/mypath/my-amp/target/my-amp.amp\",\n      \"destination\": \"/var/lib/tomcat7/amps\",\n      \"owner\": \"tomcat7\"\n  }\n}\n```\n\n##### alfresco-global.properties generation\n\nGenerates alfresco-global.properties depending on attribute values:\n```\n\"alfresco\": {\n  \"properties\": {\n    \"db.host\"               : \"db.mysql.demo.acme.com\",\n    \"dir.license.external\"  : \"/alflicense\",\n    \"index.subsystem.name\"  : \"lucene\"\n  }\n}\n```\n\nYou can disable this feature (i.e. if you ship `alfresco-global.properties` within your WAR) by defining the following attribute:\n```\n\"alfresco\": {\n  \"generate.global.properties\": false\n}\n```\n\n##### repo-log4j.properties generation\n\nGenerates repo-log4j.properties depending on attribute values:\n```\n\"alfresco\": {\n  \"repo-log4j\": {\n    \"log4j.rootLogger\"                                : \"error, File\",\n    \"log4j.appender.File\"                             : \"org.apache.log4j.DailyRollingFileAppender\",\n    \"log4j.appender.File.Append\"                      : \"true\",\n    \"log4j.appender.File.DatePattern\"                 : \"'.'yyyy-MM-dd\",\n    \"log4j.appender.File.layout\"                      : \"org.apache.log4j.PatternLayout\",\n    \"log4j.appender.File.layout.ConversionPattern\"    : \"%d{ABSOLUTE} %-5p [%c] %m%n\"\n  }\n}\n```\nYou can disable this feature (i.e. if you ship a `log4j.properties` within your WAR) by defining the following attribute:\n```\n\"alfresco\": {\n  \"generate.repo.log4j.properties\": false\n}\n```\n\n##### JDBC Drivers\n\nThe JDBC driver JAR is downloaded and placed into the Tomcat lib folder, depending on `node['alfresco']['properties']['db.prefix']` attribute; currently `mysql` and `psql` are supported.\n\n#### share\n\nInstalls Alfresco Share application within a given Servlet container; the following features are provided:\n\n##### share-config-custom.xml filtering\n\nGenerates (by default) `shared/classes/alfresco/web-extension/share-config-custom.xml` from a standard template, configuring CSRF origin/referer and endpoints pointing to Alfresco Repository:\n```\n\"alfresco\": {\n  \"shareproperties\": {\n    \"alfresco.host\"         : \"my.repo.host.com\",\n    \"alfresco.port\"         : \"80\"\n  }\n}\n```\nYou can optionally patch an existing share-config-custom.xml replacing all `@@key@@` (term delimiters are [configurable](https://github.com/maoo/artifact-deployer/blob/master/attributes/default.rb)) occurrences with attribute values of `node['alfresco']['shareproperties']` values; to enable this feature you must define the following attributes:\n```\n\"alfresco\": {\n  \"patch.share.config.custom\" : false,\n  \"generate.share.config.custom\" : true\n  }\n}\n```\n\n#### solr\n\nInstalls Alfresco Solr application within a given Servlet container; the following features are provided:\n\n##### solrcore.properties generation\n\nGenerate `solr/workspace-SpacesStore/conf/solrcore.properties` and `solr/archive-SpacesStore/conf/solrcore.properties` depending on attribute values:\n\n```\n\"alfresco\": {\n  \"solrproperties\": {\n    \"alfresco.host\"         : \"my.repo.host.com\",\n    \"alfresco.port\"         : \"80\"\n  }\n}\n```\n\n##### log4j-solr.properties generation\n\nGenerates log4j-solr.properties depending on attributes defined in `node['alfresco']['solr-log4j']`\n\n#### transform\n\nUses `alfresco::transformations` Chef recipe to install the following packages:\n- openoffice\n- imagemagick\n- swftools\n\n#### media\n\nInstalls and configures Alfresco media-management; since the feature is currently only available via Alfresco Customer Success website, you must download it first to a known Maven Repo or HTTP location and override the following attributes:\n\n```\n\"alfresco\" : {\n  \"components\" : ['haproxy','nginx','tomcat','transform','repo','share','solr','mysql','rm','googledocs','media']\n}\n\"media\" : {\n  # \"url\" : \"<url_to_media_zip_distro>\",\n  \"groupId\" : \"my_media_group_id\",\n  \"artifactId\" : \"my_media_distribution\",\n  \"version\" : \"0.0.1\",\n  \"type\" : \"zip\"\n}\n```\n\n#### analytics\n\nInstalls and configures Alfresco analytics; as per media, you must download the zip distribution package and serve it via HTTP or Maven repo; attribute values are shown below:\n\n```\nattributes: {\n  \"alfresco\" : {\n    \"components\" : ['haproxy','nginx','tomcat','transform','repo','share','solr','mysql','rm','googledocs','analytics'],\n  \"artifacts\" : {\n    \"analytics\" : {\n      \"url\" : \"<url_to_analytics_alfresco_zip_distro>\"\n    },\n    \"alfresco-pentaho\" : {\n      \"url\" : \"<url_to_alfresco_pentaho_zip_distro>\"\n    }\n  }\n}\n```\n\n#### rm\n\nInstalls Alfresco Records Management, using [Alfresco RM 2.3 AMP](https://artifacts.alfresco.com/nexus/index.html#nexus-search;gav~~alfresco-rm~2.3~~),\n\n#### googledocs\n\nInstalls Alfresco Googledocs, using [Alfresco Googledocs 3.0.2 repo and share AMPs](https://artifacts.alfresco.com/nexus/index.html#nexus-search;gav~org.alfresco.integrations~alfresco-googledocs-*~3.0.2~~),\n\n#### haproxy\n\nHAproxy is installed as OS package (using [haproxy community cookbook](https://github.com/hw-cookbooks/haproxy)) and configured using attributes defined in [haproxy.rb attribute file](https://github.com/maoo/chef-alfresco/blob/master/recipes/_haproxy-attributes.rb)\n\nThis component will also install Rsyslog server, used to dump haproxy logs into /var/log/haproxy/haproxy/log\n\n#### nginx\n\nNginx is installed as OS package (using [nginx community cookbook](https://github.com/miketheman/nginx)) and configured using attributes defined in [nginx.rb attribute file](https://github.com/maoo/chef-alfresco/blob/master/recipes/_nginx-attributes.rb)\n\n#### rsyslog\n\nConfigures and runs an rsyslog standalone installation, which logs locally by default; you can set `node['rsyslog']['server_ip']` to configure the remote server to send logs to; for more info check the [rsyslog community cookbook](https://github.com/opscode-cookbooks/rsyslog)\n\n#### logstash-forwarder\n\nConfigures and runs an logstash-forwarder to ship logs to a remote logstash server; you can set `node['logstash-forwarder']['logstash_servers']` to configure the remote server to send logs to; for more info check the [logstash community cookbook](https://github.com/elastic/logstash-forwarder)\n\nRoadmap\n---\n- analytics integration (MUST)\n- media management & analytics integration with rsyslog (MUST)\n- [BATS](https://github.com/sstephenson/bats) testing (MUST)\n- postgresql integration (SHOULD)\n- Ubuntu compatibility (COULD)\n- Windows compatibility (WOULD)\n\nUnit testing\n---\nUnit testing coverage is still low; we use foodcritic and knife tests.\n```\nbundle update\nbundle exec rake\n```\n\nWe plan to use [BATS](https://github.com/sstephenson/bats)\n\nIntegration testing\n---\nchef-alfresco is on [Travic CI](https://travis-ci.org/maoo/chef-alfresco)\n\nIntegration testing coverage is still low; we kitchen and serverspec.\n```\nkitchen test\n```\n\nDependencies\n---\nChef-Alfresco delegates the installation of 3rd party software to external cookbooks; you can find a complete list in [metadata.rb](https://github.com/maoo/chef-alfresco/blob/master/metadata.rb)\n\nCredits\n---\nThis project is a fork of the original [chef-alfresco](https://github.com/fnichol/chef-alfresco) developed by [Fletcher Nichol](https://github.com/fnichol); the code have been almost entirely rewritten, however the original implementation still works with Community 4.0.x versions and provides a different approach to Alfresco installation (using Alfresco Linux installer).\n\nA big thanks to Nichol for starting this effort!\n\nLicense and Author\n---\nCopyright 2015, Alfresco\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "maintainer": "Maurizio Pillitu",
  "maintainer_email": "",
  "license": "Apache 2.0",
  "platforms": {
  },
  "dependencies": {
    "file": ">= 0.0.0",
    "tomcat": ">= 0.0.0",
    "maven": ">= 0.0.0",
    "activemq": ">= 1.3.3",
    "artifact-deployer": ">= 0.8.16",
    "build-essential": ">= 2.2.3",
    "database": ">= 4.0.6",
    "ffmpeg": ">= 0.4.4",
    "haproxy": ">= 1.6.6",
    "imagemagick": ">= 0.2.3",
    "java": ">= 1.31.0",
    "libreoffice": ">= 0.0.2",
    "line": ">= 0.6.2",
    "logstash-forwarder": ">= 0.1.1",
    "mysql": ">= 6.0.21",
    "mysql2_chef_gem": ">= 1.0.1",
    "nginx": ">= 2.7.6",
    "openssl": ">= 4.0.0",
    "postgresql": ">= 3.4.18",
    "rsyslog": ">= 1.15.0",
    "swftools": ">= 0.2.4",
    "yum-epel": ">= 0.0.0",
    "yum-repoforge": ">= 0.5.1",
    "yum-atrpms": ">= 0.1.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  },
  "version": "0.6.14",
  "source_url": "",
  "issues_url": ""
}